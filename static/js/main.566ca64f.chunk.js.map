{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","api/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","useEffect","getMovie","fetch","then","response","ok","Error","status","statusText","json","getMoviesData","foundedMovie","Response","Title","Plot","Poster","imdbID","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","App","data","setMovies","some","el","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.566ca64f.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description = '',\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport { MovieCard } from '../MovieCard';\nimport { getMoviesData } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {}, [title]);\n\n  const getMovie = () => {\n    getMoviesData(title)\n      .then((foundedMovie) => {\n        if (foundedMovie.Response === 'False') {\n          setError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        setMovie({\n          title: foundedMovie.Title,\n          description: foundedMovie.Plot,\n          imgUrl: foundedMovie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${foundedMovie.imdbID}/`,\n          imdbId: foundedMovie.imdbID,\n        });\n        setError(false);\n        setTitle('');\n      });\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => {\n          event.preventDefault();\n          getMovie();\n        }}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames(\n                'input', { 'is-danger': error },\n              )}\n              value={title}\n              onChange={(event) => {\n                setTitle(event.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => {\n                addMovie(movie);\n                setMovie(null);\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && <MovieCard {...movie} />}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=913d66b8&t=';\n\nexport function getMoviesData(title) {\n  return fetch(`${BASE_URL}${title}`)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n}\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(data);\n\n  const addMovie = (movie) => {\n    if (!movie) {\n      return;\n    }\n\n    if (!movies.some(el => el.imdbId === movie.imdbId)) {\n      setMovies(() => [...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}